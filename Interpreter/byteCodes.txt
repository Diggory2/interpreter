======Байт коды операций====

Арифметика:

  -Целая,Дробная, бит.Операции
	|-----|----|----|----|
	|code | r1 | r2 | r3 |
	|-----|----|----|----|
		r1 - Номер регистра куда сохранится результат
		r2,r3 - Номера регистров над которыми производится действие
	
	code:
		iAdd = 2,       ///< Сложение целых чисел
        iSub = 3,       ///< Вычитание целых чисел
        iMul = 4,       ///< Умножение целых чисел
        iDiv = 5,       ///< Деление целых чисел

		fAdd = 6,       ///< Сложение дробных чисел
        fSub = 7,       ///< Вычитание дробных чисел
        fMul = 8,       ///< Умножение дробных чисел
        fDiv = 9,       ///< Деление дробных чисел

        And = 10,		///< Битовое И
        Or = 11,		///< Битовое ИЛИ
        Not = 12,		///< Битовое НЕ
        shif_L = 33,    ///< Битовый сдвиг влево
        shif_R = 34,    ///< битовый сдвиг вправо
Example:
    5 1 2 3

Пересылка
    |-----|----|----|----|----------|
	|code | r1 | r2 | r3 | (offset) |
	|-----|----|----|----|----------|

    r3 - Что?           -| Номера
    r1 - Куда           -| Регистров
    r2 - Тип пересылки
    offset - Адрес      - Опционально

             *
         1 X 0 Y         - Регистр - Регистр X = Y
         1 X 1 0 offset  - Регистр - Память  X = mem[offset]
         1 X 3 Y offset  - Регистр - Память  X = mem[offset] + Y
         
         1 X 5 0 offset  - Память - Регистр   mem[offset] = X
         1 X 7 Y offset  - Память - Регистр    mem[offset + Y] = X

         1 X 2 0 offset  - Загрузка адреса в регистр  X = offset
         1 X 6 Y offset  - Загрузка адреса в регистр  X = offset + Y

Ввод\Вывод

Сравнение
    |-----|---|----|----|
	|code | + | r2 | r3 | 
	|-----|---|----|----|
    
    r2,r3 - Номера регистров с числами которые мы сравниваем
    
    code:
        Icmp = 16,      ///< Сравнение целых
        Fcmp = 17,      ///< Сравнение дробных
Переходы

Прямой
    |-----|---|----|----|
	|code | + | r2 | r3 | 
	|-----|---|----|----|
         *
    20 0 1 0 offset   jmp по offset
    20 0 3 2 offset   jmp по offset + reg[2]

    
Косвенный
    |-----|----|-----|----|
	|code | r1 |  +  | r3 |
	|-----|----|-----|----|
    r1 = 4 СТРОГО!
    
    r3 -Номер регистра в котором хранится адрес перехода
    IP = IP + r3
    Example: 20 4 0 3

Относительный
    |-----|----|----|----|
	|code | r1 | r2 | r3 |
	|-----|----|----|----|
    r1 != 4
    r1 r2 r3 = адрес разбивается по 3 бит(3 бит в r1 игнорируется), на выходе получается 8 битное смещение

    IP = IP + <r1r2r3>
    Смещение не больше 255(2^8-1)
    
    Example: 
                   r1  r2  r3
    Смещние: 125 = 01 111 101
    code
        jmp = 20,       ///< Прямой безусловный переход
        je = 21,        ///< Условный переход если равно
        jne = 22,       ///< Условный переход если не равно

        jl = 23,        ///< Условный переход если меньше
        jle = 24,       ///< Условный переход если меньше или равно
        jg = 25,        ///< Условный переход если больше
        jge = 26,       ///< Условный переход если больше или равно

        jb = 27,        ///< Условный переход если ниже
        jbe = 28,       ///< Условный переход если ниже или равно
        ja = 29,        ///< Условный переход если выше
        jae = 30,       ///< Условный переход если ниже или равно

Вызов подпрограммы
    |-----|---|---|---|
	| 31  | 1 | 0 | 0 | 
	|-----|---|---|---|
    Example: 31 1 0 0 

Возврат из подпрограммы
    |-----|---|---|---|
	| 32  | 0 | 0 | 0 | 
	|-----|---|---|---|
